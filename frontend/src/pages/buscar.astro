---
import Layout from '../layouts/Layout.astro';
import PostCard from '../components/PostCard.astro';
import { searchPostsOptimized } from '../lib/search';
import { checkTrailingSlashRedirect } from '../lib/utils';

// Verificar se a URL atual termina com slash, se n√£o, redirecionar
const redirectResponse = checkTrailingSlashRedirect(Astro);
if (redirectResponse) {
  return redirectResponse;
}

// Pegar par√¢metros da URL
const url = new URL(Astro.request.url);
const searchQuery = url.searchParams.get('q') || '';
const currentPage = parseInt(url.searchParams.get('page') || '1');
const pageSize = 20;

// Buscar posts usando a nova API otimizada
const searchData = searchQuery && searchQuery.length >= 3 
  ? await searchPostsOptimized(searchQuery, currentPage, pageSize)
  : { results: [], pagination: { page: 1, pageSize, total: 0, pageCount: 0 } };

const { results, pagination } = searchData;

const pageTitle = searchQuery ? `Buscar: ${searchQuery}` : 'Buscar Not√≠cias';
const routePrefix = (import.meta as any).env.PUBLIC_ROUTE_PREFIX || 'apostas';

// Gerar links de pagina√ß√£o
const generatePageUrl = (page: number) => `/buscar?q=${encodeURIComponent(searchQuery)}&page=${page}`;
---

<Layout title={pageTitle}>
  <div class="search-page">
    <!-- Header da busca -->
    <div class="search-header">
      <h1 class="search-title">
        <span class="search-icon">üîç</span>
        {searchQuery ? `Resultados para: "${searchQuery}"` : 'Buscar Not√≠cias'}
      </h1>
      
      <!-- Formul√°rio de busca -->
      <form class="search-form" method="get" action="/buscar">
        <div class="search-input-group">
          <input 
            type="text" 
            name="q" 
            value={searchQuery}
            placeholder="Buscar por t√≠tulo, conte√∫do ou autor (m√≠n. 3 letras)"
            class="search-input"
            minlength="3"
            required
          />
          <button type="submit" class="search-button">
            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
          </button>
        </div>
      </form>

      <!-- Informa√ß√µes dos resultados -->
      {searchQuery && (
        <div class="search-stats">
          <p>
            {pagination.total === 0 ? 'Nenhum resultado' : 
             pagination.total === 1 ? '1 resultado encontrado' : 
             `${pagination.total} resultados encontrados`}
            {pagination.pageCount > 1 && (
              <span> - P√°gina {pagination.page} de {pagination.pageCount}</span>
            )}
          </p>
        </div>
      )}
    </div>

    <!-- Conte√∫do principal -->
    <div class="search-content">
      {searchQuery && searchQuery.length < 3 ? (
        <!-- Valida√ß√£o de caracteres m√≠nimos -->
        <div class="search-message">
          <div class="message-icon">‚ö†Ô∏è</div>
          <h2>Digite pelo menos 3 caracteres</h2>
          <p>Para obter melhores resultados, digite pelo menos 3 caracteres na busca.</p>
        </div>
      ) : results.length > 0 ? (
        <!-- Resultados encontrados -->
        <div class="results-grid">
          {results.map((post, index) => (
            <PostCard post={post} index={index} />
          ))}
        </div>
      ) : searchQuery ? (
        <!-- Nenhum resultado -->
        <div class="search-message">
          <div class="message-icon">üòî</div>
          <h2>Nenhum resultado encontrado</h2>
          <p>N√£o encontramos nenhuma not√≠cia para <strong>"{searchQuery}"</strong></p>
          <div class="search-suggestions">
            <h3>Dicas para melhorar sua busca:</h3>
            <ul>
              <li>Verifique se as palavras est√£o escritas corretamente</li>
              <li>Tente usar palavras mais gerais</li>
              <li>Use palavras-chave diferentes</li>
              <li>Procure por nomes de times, jogadores ou categorias</li>
            </ul>
          </div>
        </div>
      ) : (
        <!-- Estado inicial -->
        <div class="search-message">
          <div class="message-icon">üîç</div>
          <h2>Encontre as not√≠cias que procura</h2>
          <p>Digite no campo acima para buscar por t√≠tulos, conte√∫do ou autores.</p>
          
          <div class="search-examples">
            <h3>Exemplos de busca:</h3>
            <div class="examples-list">
              <button class="example-btn" onclick="document.querySelector('.search-input').value='futebol'; document.querySelector('.search-form').submit();">
                futebol
              </button>
              <button class="example-btn" onclick="document.querySelector('.search-input').value='palpites'; document.querySelector('.search-form').submit();">
                palpites
              </button>
              <button class="example-btn" onclick="document.querySelector('.search-input').value='cassino'; document.querySelector('.search-form').submit();">
                cassino
              </button>
              <button class="example-btn" onclick="document.querySelector('.search-input').value='jogos de hoje'; document.querySelector('.search-form').submit();">
                jogos de hoje
              </button>
            </div>
          </div>
        </div>
      )}

      <!-- Pagina√ß√£o -->
      {pagination.pageCount > 1 && (
        <nav class="pagination" aria-label="Navega√ß√£o de p√°ginas">
          <div class="pagination-controls">
            <!-- P√°gina anterior -->
            {pagination.page > 1 ? (
              <a 
                href={generatePageUrl(pagination.page - 1)}
                class="pagination-link prev"
                aria-label="P√°gina anterior"
              >
                ‚Üê Anterior
              </a>
            ) : (
              <span class="pagination-link disabled">‚Üê Anterior</span>
            )}

            <!-- N√∫meros das p√°ginas -->
            <div class="pagination-numbers">
              {/* P√°gina atual e adjacentes */}
              {[...Array(Math.min(5, pagination.pageCount))].map((_, i) => {
                const pageNum = Math.max(1, pagination.page - 2) + i;
                if (pageNum > pagination.pageCount) return null;
                
                return pageNum === pagination.page ? (
                  <span class="pagination-number active" aria-current="page">
                    {pageNum}
                  </span>
                ) : (
                  <a href={generatePageUrl(pageNum)} class="pagination-number">
                    {pageNum}
                  </a>
                );
              })}
            </div>

            <!-- Pr√≥xima p√°gina -->
            {pagination.page < pagination.pageCount ? (
              <a 
                href={generatePageUrl(pagination.page + 1)}
                class="pagination-link next"
                aria-label="Pr√≥xima p√°gina"
              >
                Pr√≥xima ‚Üí
              </a>
            ) : (
              <span class="pagination-link disabled">Pr√≥xima ‚Üí</span>
            )}
          </div>
        </nav>
      )}
    </div>
  </div>
</Layout>

<style>
  .search-page {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .search-header {
    margin-bottom: 2rem;
    text-align: center;
  }

  .search-title {
    font-size: 2.5rem;
    font-weight: bold;
    color: var(--color-text);
    margin-bottom: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
  }

  .search-icon {
    font-size: 2rem;
  }

  .search-form {
    max-width: 600px;
    margin: 0 auto 1rem;
  }

  .search-input-group {
    display: flex;
    border: 2px solid var(--color-border);
    border-radius: 8px;
    overflow: hidden;
    background: white;
  }

  .search-input {
    flex: 1;
    padding: 1rem;
    border: none;
    font-size: 1.1rem;
    outline: none;
  }

  .search-input:focus {
    outline: none;
  }

  .search-input-group:focus-within {
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgba(240, 221, 36, 0.1);
  }

  .search-button {
    padding: 1rem 1.5rem;
    background: var(--color-primary);
    color: white;
    border: none;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .search-button:hover {
    background: var(--color-primary-dark);
  }

  .search-stats {
    color: var(--color-text-light);
    font-size: 0.9rem;
  }

  .search-content {
    min-height: 400px;
  }

  .results-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 1.5rem;
    margin-bottom: 3rem;
  }

  .search-message {
    text-align: center;
    padding: 3rem 2rem;
    max-width: 600px;
    margin: 0 auto;
  }

  .message-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
  }

  .search-message h2 {
    font-size: 1.5rem;
    color: var(--color-text);
    margin-bottom: 1rem;
  }

  .search-message p {
    color: var(--color-text-light);
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .search-suggestions, .search-examples {
    text-align: left;
    margin-top: 2rem;
  }

  .search-suggestions h3, .search-examples h3 {
    font-size: 1.1rem;
    margin-bottom: 1rem;
    color: var(--color-text);
  }

  .search-suggestions ul {
    list-style: none;
    padding: 0;
  }

  .search-suggestions li {
    padding: 0.5rem 0;
    color: var(--color-text-light);
  }

  .search-suggestions li:before {
    content: "üí° ";
    margin-right: 0.5rem;
  }

  .examples-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: center;
  }

  .example-btn {
    padding: 0.5rem 1rem;
    border: 1px solid var(--color-border);
    border-radius: 20px;
    background: var(--color-bg);
    color: var(--color-text);
    cursor: pointer;
    transition: all 0.2s;
  }

  .example-btn:hover {
    background: var(--color-primary);
    color: white;
    border-color: var(--color-primary);
  }

  /* Estilos de pagina√ß√£o */
  .pagination {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid var(--color-border);
  }

  .pagination-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .pagination-link {
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.5rem 1rem;
    border: 1px solid var(--color-border);
    border-radius: 0.375rem;
    color: var(--color-text);
    text-decoration: none;
    transition: all 0.2s ease;
    background-color: var(--color-bg);
  }

  .pagination-link:hover:not(.disabled) {
    background-color: var(--color-primary);
    color: white;
    border-color: var(--color-primary);
  }

  .pagination-link.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    color: var(--color-text-light);
  }

  .pagination-numbers {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .pagination-number {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 2.5rem;
    height: 2.5rem;
    padding: 0 0.5rem;
    border: 1px solid var(--color-border);
    border-radius: 0.375rem;
    color: var(--color-text);
    text-decoration: none;
    transition: all 0.2s ease;
    background-color: var(--color-bg);
  }

  .pagination-number:hover {
    background-color: var(--color-primary);
    color: white;
    border-color: var(--color-primary);
  }

  .pagination-number.active {
    background-color: var(--color-primary);
    color: white;
    border-color: var(--color-primary);
    font-weight: bold;
  }

  .pagination-ellipsis {
    color: var(--color-text-light);
    padding: 0 0.25rem;
  }

  @media (max-width: 768px) {
    .search-title {
      font-size: 1.75rem;
    }

    .search-input-group {
      flex-direction: column;
    }

    .search-button {
      border-top: 1px solid var(--color-border);
    }

    .results-grid {
      grid-template-columns: 1fr;
    }

    .pagination-controls {
      gap: 0.5rem;
    }

    .pagination-link {
      padding: 0.375rem 0.75rem;
      font-size: 0.9rem;
    }

    .pagination-number {
      min-width: 2rem;
      height: 2rem;
      font-size: 0.9rem;
    }

    .examples-list {
      justify-content: center;
    }
  }
</style>
