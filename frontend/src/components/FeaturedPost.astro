---
import { getImageUrl, formatDate, getPostDate } from '../lib/strapi';
import type { Post } from '../lib/strapi';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const imageUrl = getImageUrl(post.coverImage, 'large');
const contentTypePlural = import.meta.env.PUBLIC_CONTENT_TYPE_PLURAL || 'posts';
const postDate = getPostDate(post);
---

<article class="featured-post">
  <a href={`/${contentTypePlural}/${post.slug}`} class="featured-post-link">
    {post.coverImage ? (
      <img 
        src={imageUrl} 
        alt={post.title}
        class="featured-post-image"
        width="800"
        height="450"
        decoding="async"
        loading="eager"
      />
    ) : (
      <div class="featured-post-image featured-post-placeholder"></div>
    )}
    
    <div class="featured-post-overlay">
      <div class="featured-post-content">
        {post.category && (
          <span class="category-badge">{post.category.name}</span>
        )}
        
        <h2 class="featured-post-title">{post.title}</h2>
        
        {post.excerpt && (
          <p class="featured-post-excerpt">{post.excerpt}</p>
        )}
        
        <div class="featured-post-meta">
          <time datetime={postDate}>
            {formatDate(postDate)}
          </time>
          {post.authors && post.authors.length > 0 && (
            <span>Por {post.authors[0].name}</span>
          )}
        </div>
      </div>
    </div>
  </a>
</article>

<style>
  .featured-post {
    position: relative;
    height: 400px;
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: var(--shadow-lg);
  }
  
  .featured-post-link {
    text-decoration: none;
    color: inherit;
    display: block;
    height: 100%;
  }
  
  .featured-post-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .featured-post-placeholder {
    background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
  }
  
  .featured-post-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
    display: flex;
    align-items: flex-end;
    padding: 2rem;
  }
  
  .featured-post-content {
    color: white;
  }
  
  .category-badge {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    background: var(--color-primary);
    color: white;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }
  
  .featured-post-title {
    font-size: 1.75rem;
    font-weight: bold;
    margin-bottom: 0.5rem;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    line-height: 1.2; /* Consistência anti-CLS */
    min-height: 2.4em; /* 2 linhas * 1.2 line-height */
  }
  
  .featured-post-excerpt {
    margin: 0.5rem 0 1rem;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    opacity: 0.9;
    line-height: 1.4; /* Consistência anti-CLS */
    min-height: 2.8em; /* 2 linhas * 1.4 line-height */
  }
  
  .featured-post-meta {
    display: flex;
    gap: 1rem;
    font-size: 0.875rem;
    opacity: 0.9;
  }
  
  @media (max-width: 768px) {
    .featured-post {
      height: 300px;
    }
    
    .featured-post-title {
      font-size: 1.5rem;
    }
  }
</style>