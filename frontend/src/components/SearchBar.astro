---
export interface Props {
  routePrefix?: string;
}
const { routePrefix = 'noticias' } = Astro.props;
---

<div class="search-container">
  <form class="search-form" id="searchForm" data-route-prefix={routePrefix}>
    <input 
      type="text" 
      class="search-input" 
      id="searchInput"
      placeholder="Buscar por título, conteúdo ou autor (mín. 3 letras)"
      autocomplete="off"
      minlength="3"
    />
    <button type="submit" class="search-button" aria-label="Buscar">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
      </svg>
    </button>
  </form>
  
  <div class="search-results" id="searchResults"></div>
</div>

<script>
  const searchForm = document.getElementById('searchForm');
  const searchInput = document.getElementById('searchInput');
  const searchResults = document.getElementById('searchResults');
  const routePrefix = searchForm?.dataset?.routePrefix || 'noticias';
  
  let searchTimeout: ReturnType<typeof setTimeout>;
  
  // Função de busca
  async function performSearch(query: string) {
    if (query.length < 3) {
      searchResults?.classList.remove('active');
      return;
    }
    
    try {
      console.log('Buscando por:', query);
      const baseUrl = window.location.origin;
      const searchUrl = `${baseUrl}/api/search?q=${encodeURIComponent(query)}`;
      console.log('URL de busca:', searchUrl);
      const response = await fetch(searchUrl);
      console.log('Response status:', response.status);
      const data = await response.json();
      console.log('Dados recebidos:', data);
      
      if (data.results) {
        displayResults(data.results);
      }
    } catch (error) {
      console.error('Erro na busca:', error);
      if (searchResults) {
        searchResults.innerHTML = `
          <div class="search-result-item">
            <div class="search-result-title">Erro ao buscar</div>
          </div>
        `;
        searchResults.classList.add('active');
      }
    }
  }
  
  // Exibir resultados
  function displayResults(results: any[]) {
    if (!results || results.length === 0) {
      if (searchResults) {
        searchResults.innerHTML = `
          <div class="search-result-item">
            <div class="search-result-title">Nenhum resultado encontrado</div>
            <div class="search-result-meta">Digite pelo menos 3 caracteres</div>
          </div>
        `;
      }
    } else {
      if (searchResults) {
        searchResults.innerHTML = results.map((item: any) => {
          const authorInfo = item.authors && item.authors.length > 0 
            ? `por ${item.authors[0].name}` 
            : '';
          const categoryInfo = item.category?.name 
            ? `em ${item.category.name}` 
            : '';
          
          return `
            <a href="/${routePrefix}/${item.slug}" class="search-result-item">
              <div class="search-result-title">${item.title}</div>
              ${item.excerpt ? `<div class="search-result-excerpt">${item.excerpt.substring(0, 100)}...</div>` : ''}
              ${(authorInfo || categoryInfo) ? `<div class="search-result-meta">${authorInfo} ${categoryInfo}</div>` : ''}
            </a>
          `;
        }).join('');
      }
    }
    
    searchResults?.classList.add('active');
  }
  
  // Event listeners
  searchInput?.addEventListener('input', (e) => {
    clearTimeout(searchTimeout);
    const target = e.target as HTMLInputElement;
    const query = target?.value?.trim() || '';
    
    if (query.length < 3) {
      searchResults?.classList.remove('active');
      return;
    }
    
    // Mostrar loading
    if (searchResults) {
      searchResults.innerHTML = `
        <div class="search-result-item">
          <div class="search-result-title">Buscando...</div>
        </div>
      `;
      searchResults.classList.add('active');
    }
    
    searchTimeout = setTimeout(() => {
      performSearch(query);
    }, 500); // Aumentado para 500ms para reduzir requisições
  });
  
  searchForm?.addEventListener('submit', (e) => {
    e.preventDefault();
    const input = searchInput as HTMLInputElement;
    const query = input?.value || '';
    if (query && query.length >= 3) {
      window.location.href = `/buscar?q=${encodeURIComponent(query)}`;
    }
  });
  
  // Fechar resultados ao clicar fora
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    if (!searchForm?.contains(target)) {
      searchResults?.classList.remove('active');
    }
  });
</script>