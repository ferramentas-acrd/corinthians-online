---
import { formatDate, getPostDate } from '../lib/strapi';
import { getPostUrl } from '../lib/routes';
import OptimizedImage from './OptimizedImage.astro';
import type { Post } from '../lib/strapi';
import { getImageUrl } from '../lib/strapi';

export interface Props {
  posts: Post[];
}

const { posts } = Astro.props;

// Separar posts: primeiro para destaque grande, próximos dois para cards menores
const mainPost = posts[0];
const secondaryPosts = posts.slice(1, 3);

 // Preparar URLs da imagem LCP para preload
const lcpImageUrls = mainPost?.coverImage ? {
  medium: mainPost.coverImage.formats?.medium ? getImageUrl(mainPost.coverImage, 'medium') : null,
  large: mainPost.coverImage.formats?.large ? getImageUrl(mainPost.coverImage, 'large') : null,
  original: getImageUrl(mainPost.coverImage)
} : null;

// Definir a URL principal para preload (preferir medium para performance)
const lcpPreloadUrl = lcpImageUrls?.medium || lcpImageUrls?.large || lcpImageUrls?.original;
---

{posts.length > 0 && (
  <section class="hero-section">
    <div class="container">
      <div class="hero-grid">
        {/* Post Principal - Lado Esquerdo */}
        {mainPost && (
          <div class="hero-main">
            <a href={getPostUrl(mainPost.slug)} class="hero-main-link">
              <div class="hero-main-image">
                {mainPost.coverImage && (
                  <OptimizedImage
                    media={mainPost.coverImage}
                    alt={mainPost.title}
                    sizes="(max-width: 640px) 100vw, (max-width: 1024px) 80vw, 1200px"
                    loading="eager"
                    priority={true}
                    class="hero-bg-image"
                  />
                )}
                <div class="hero-gradient">
                  <div class="hero-content">
                    {mainPost.category && (
                      <span class="hero-category">{mainPost.category.name}</span>
                    )}
                    <h2 class="hero-title">{mainPost.title}</h2>
                    <div class="hero-meta">
                      <time datetime={getPostDate(mainPost)}>
                        {formatDate(getPostDate(mainPost))}
                      </time>
                      {mainPost.authors?.[0] && (
                        <span>• Por {mainPost.authors[0].name}</span>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            </a>
          </div>
        )}

        {/* Posts Secundários - Lado Direito */}
        <div class="hero-secondary">
          {secondaryPosts.map((post) => (
            <div class="hero-card">
              <a href={getPostUrl(post.slug)} class="hero-card-link">
                <div class="hero-card-image">
                  {post.coverImage && (
                    <OptimizedImage
                      media={post.coverImage}
                      alt={post.title}
                      sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 400px"
                      loading="eager"
                      class="hero-bg-image"
                    />
                  )}
                  <div class="hero-gradient">
                    <div class="hero-content">
                      {post.category && (
                        <span class="hero-category-small">{post.category.name}</span>
                      )}
                      <h3 class="hero-title-small">{post.title}</h3>
                    </div>
                  </div>
                </div>
              </a>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>
)}
    
  </Fragment>


<style>
  .hero-section {
    padding: 1rem 0;
    width: 100%;
  }

  .hero-grid {
    display: flex;
    gap: 1rem;
    min-height: 480px;
    align-items: stretch;
  }

  /* Post Principal */
  .hero-main {
    flex: 2;
    height: 100%;
    border-radius: 8px;
    overflow: hidden;
    background-color: #f5f5f5;
    position: relative;
    contain: layout paint;
    will-change: transform;
    transform: translateZ(0);
  }

  .hero-main-link {
    display: block;
    height: 100%;
  }

  .hero-main-image {
    width: 100%;
    height: 100%;
    position: relative;
    overflow: hidden;
  }

  .hero-bg-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* Posts Secundários */
  .hero-secondary {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 2rem;
    height: 100%;
    min-height: 480px;
  }

  .hero-card {
    flex: 1;
    border-radius: 8px;
    overflow: hidden;
    background-color: #f5f5f5;
    position: relative;
  }

  .hero-card-link {
    display: block;
    height: 100%;
  }

  .hero-card-image {
    width: 100%;
    height: 100%;
    position: relative;
    overflow: hidden;
  }

  /* Gradiente e conteúdo */
  .hero-gradient {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to top, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0.4) 60%, transparent 100%);
    padding: 2rem 2rem 1.5rem;
    display: flex;
    align-items: flex-end;
  }

  .hero-content {
    width: 100%;
  }

  /* Categorias */
  .hero-category {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    background: var(--color-primary);
    color: white;
    font-size: 0.75rem;
    font-weight: 600;
    border-radius: 4px;
    margin-bottom: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .hero-category-small {
    display: inline-block;
    padding: 0.2rem 0.6rem;
    background: var(--color-primary);
    color: white;
    font-size: 0.7rem;
    font-weight: 600;
    border-radius: 4px;
    margin-bottom: 0.5rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  /* Títulos */
  .hero-title {
    font-family: "Open Sans", Helvetica, sans-serif;
    font-weight: 700;
    color: #ffffff;
    font-size: 24px;
    line-height: 1.3;
    margin-bottom: 0.75rem;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  }

  .hero-title-small {
    font-family: "Open Sans", Helvetica, sans-serif;
    font-weight: 700;
    color: #ffffff;
    font-size: 18px;
    line-height: 1.3;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  }

  /* Meta informações */
  .hero-meta {
    font-size: 0.875rem;
    color: rgba(255, 255, 255, 0.8);
    display: flex;
    gap: 0.5rem;
  }

  /* Hover Effects */
  .hero-main:hover .hero-bg-image,
  .hero-card:hover .hero-bg-image {
    transform: scale(1.05);
  }

  .hero-bg-image {
    transition: transform 0.5s ease;
  }

  /* Responsivo */
  @media (max-width: 1024px) {
    .hero-grid {
      flex-direction: column;
      height: auto;
    }

    .hero-main {
      flex: none;
      height: 350px;
    }

    .hero-secondary {
      flex: none;
      flex-direction: row;
      height: 250px;
      min-height: 250px;
    }

    .hero-card {
      flex: 1;
      min-height: 250px;
    }
  }

  @media (max-width: 640px) {
    .hero-section {
      padding: 1rem 0;
    }

    .hero-grid {
      gap: 1rem;
    }

    .hero-main {
      height: 300px;
    }

    .hero-secondary {
      flex-direction: column;
      height: auto;
    }

    .hero-card {
      height: 220px;
      min-height: 220px;
    }

    .hero-title {
      font-size: 20px;
    }

    .hero-title-small {
      font-size: 16px;
    }

    .hero-gradient {
      padding: 1.5rem 1rem 1rem;
    }
  }
</style>
